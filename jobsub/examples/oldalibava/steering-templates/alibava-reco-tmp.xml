<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Thu Apr 10 11:42:04 2014

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="MyAlibavaPedestalSubtraction"/>
      <processor name="MyAlibavaConstantCommonModeProcessor"/>
      <processor name="MyAlibavaCommonModeSubtraction"/>
      <processor name="Save"/>
      <processor name="PrintEventNumber"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @LcioPath@/@AlibavaOutputFormat@-converter.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
      <!--To set of channels to be used, ex.The format should be like $ChipNumber:StartChannel-EndChannel$ ex. $0:5-20$ $0:30-100$ $1:50-70$ means from chip 0 channels be    tween 5-20 and 30-100, from chip 1 channels between 50-70 will be used (all numbers included). the rest will be masked and not used Note that the numbers should be in     ascending order and there should be no space between two $ character-->  
      <parameter name="ChannelsToBeUsed"> @Bonds@ </parameter>
      <!--To choose if processor should skip masked events. Set the value to 0 for false, to 1 for true -->
      <parameter name="SkipMaskedEvents"> @SkipMaskedEvents@ </parameter>

   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@AlibavaOutputFormat@-reco"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyAlibavaPedestalSubtraction" type="AlibavaPedestalSubtraction">
 <!--AlibavaPedestalSubtraction subtracts the provided pedestal values from the input raw data. -->
  <!--Input raw data collection name-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> rawdata </parameter>
  <!--Output data collection name-->
  <parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData"> recodata_notcmmd </parameter>
  <!--Noise collection name, better not to change-->
  <parameter name="NoiseCollectionName" type="string" value="noise_cmmd"/>
  <!--Pedestal collection name, better not to change-->
  <parameter name="PedestalCollectionName" type="string" value="pedestal_cmmd"/>
  <!--The filename where the pedestal and noise values stored-->
  <parameter name="PedestalInputFile" type="string" value="@DatabasePath@/ped@PedestalRunNumber@-commonmode.slcio"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyAlibavaConstantCommonModeProcessor" type="AlibavaConstantCommonModeProcessor">
 <!--AlibavaCommonModeProcessor computes the common mode values of each chip and their errors-->
  <!--Input data collection name (should be pedestal subtracted!)-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> recodata_notcmmd </parameter>
  <!--Common mode collection name, better not to change-->
  <parameter name="CommonModeCollectionName" type="string" value="commonmode"/>
  <!--The number of iteration that should be used in common mode calculation-->
  <!--parameter name="CommonModeErrorCalculationIteration" type="int" value="3"/-->
  <!--Common mode error collection name, better not to change-->
  <parameter name="CommonModeErrorCollectionName" type="string" value="commonmodeerror"/>
  <!--The limit to the deviation of noise. The data exceeds this deviation will be considered as signal and not be included in common mode error calculation-->
  <!--parameter name="NoiseDeviation" type="float" value="2.5"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyAlibavaCommonModeSubtraction" type="AlibavaCommonModeSubtraction">
 <!--AlibavaCommonModeSubtraction subtracts the provided common mode values from the input reco (pedestal subtracted) data. -->
  <!--Input reco data collection name-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> recodata_notcmmd </parameter>
  <!--Output data collection name-->
  <parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData"> recodata_cmmd </parameter>
  <!--Common mode collection name, better not to change-->
  <parameter name="CommonModeCollectionName" type="string" value="commonmode"/>
  <!--Common mode error collection name, better not to change-->
  <parameter name="CommonModeErrorCollectionName" type="string" value="commonmodeerror"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="Save" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec"> TPCHits HCalHits </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@AlibavaOutputFormat@-reco.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="PrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int" value="2500"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool" value="false"/-->
</processor>


</marlin>
