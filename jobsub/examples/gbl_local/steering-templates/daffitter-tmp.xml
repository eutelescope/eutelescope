<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Wed Feb 11 16:23:44 2015

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="HitLocalToGlobal"/>
      <processor name="DafFitter"/>
      <!--processor name="HitGlobalToLocal"/>
      <processor name="TrackDumper"/-->
      <processor name="MyEUTelUtilityPrintEventNumber"/>
      <processor name="Save"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-hitmaker.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-daffitter-histo"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="HitLocalToGlobal" type="EUTelProcessorCoordinateTransformHits">
 <!--EUTelLocaltoGlobalHitMaker is responsible to change local coordinates to global. This is done using the EUTelGeometryClass-->
  <!--Local input hit collection name-->
  <parameter name="hitCollectionNameInput" type="string" lcioInType="TrackerHit"> local_hit </parameter>
  <!--Global output hit collection name-->
  <parameter name="hitCollectionNameOutput" type="string" lcioOutType="TrackerHit"> hit </parameter>
  <!--Set to true to undo the alignment instead-->
  <!--parameter name="Undo Alignment (boolean)" type="bool" value="false"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="DafFitter" type="EUTelDafFitter">
 <!--This processor preforms track reconstruction. The tracks are as final track fit for analysis.-->
  <!--Collection name for fitted tracks-->
  <parameter name="TrackCollectionName" type="string" lcioOutType="Track"> track </parameter>
  <!--Should plots be made and filled?-->
  <!--parameter name="AddToLCIO" type="bool" value="true"/-->
  <!--Names of alignment collections, should be in same order as application-->
  <!--parameter name="AlignmentCollectionNames" type="StringVec"> </parameter-->
  <!--DAF fitter: The cutoff value for a measurement to be included in the fit.-->
  <parameter name="Chi2Cutoff" type="float" value="1000"/>
  <!--cluster collection name -->
  <!--parameter name="ClusterCollection" type="string" value="cluster_m26"/-->
  <!--List of sensor IDs for the DUT planes. Used to make the decision on whether ro accept the track or not. These planes are not used in track finder, and not in the track fitter unless option 'useDutsInFit' is set.-->
  <parameter name="DutPlanes" type="IntVec" value=""/>
  <!--Sigma of telescope resolution in the global X plane,-->
  <parameter name="DutResolutionX" type="float" value="72.2"/>
  <!--Sigma of telescope resolution in the global Y plane,-->
  <parameter name="DutResolutionY" type="float" value="14.4"/>
  <!--Beam energy [GeV], used to calculate amount of scatter-->
  <parameter name="Ebeam" type="float" value="@BeamEnergy@"/>
  <!--Track finding: The maximum allowed distance between to hits in the xy plane for inclusion in track candidate-->
  <parameter name="FinderRadius" type="float" value="500"/>
  <!--Set this to true if you want DUTs to be included in the track fit-->
  <parameter name="FitDuts" type="bool" value="false"/>
  <!--Names of input hit collections-->
  <parameter name="HitCollectionName" type="StringVec" value="hit"/>
  <!--Should plots be made and filled?-->
  <parameter name="MakePlots" type="bool" value="true"/>
  <!--Maximum allowed global chi2/ndof-->
  <parameter name="MaxChi2OverNdof" type="float" value="50"/>
  <!--How many DUT hits do we need in order to accept track?-->
  <!--parameter name="NDutHits" type="int" value="0"/-->
  <!--dx/dz assumed by track finder-->
  <parameter name="NominalDxdz" type="float" value="0"/>
  <!--dy/dz assumed by track finder-->
  <parameter name="NominalDydz" type="float" value="0"/>
  <!--Radiation lengths of planes.-->
  <!--parameter name="RadiationLengths" type="FloatVec"> </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string" value="referenceHit"/-->
  <!--How many telescope planes do we require to be included in the fit?-->
  <parameter name="RequireNTelPlanes" type="float" value="5"/>
  <!--Scale thickness of DUT planes-->
  <!--parameter name="ScaleScattering" type="float" value="1"/-->
  <!--Sigma of telescope resolution in the global X plane,-->
  <parameter name="TelResolutionX" type="float" value="@TelResolution@"/>
  <!--Sigma of telescope resolution in the global Y plane,-->
  <parameter name="TelResolutionY" type="float" value="@TelResolution@"/>
  <!--List of sensor IDs for the telescope planes. These planes are used for the track finder, and track fitter.-->
  <parameter name="TelescopePlanes" type="IntVec" value="@TelPlanes@"/>
  <!--Filename for fitted tracks-->
  <!--parameter name="TrackAsciiName" type="string" value="tracks.txt"/-->
  <!--Do you want the reference hit collection to be used for coordinate transformations?-->
  <parameter name="UseReferenceCollection" type="bool" value="false"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
  <parameter name="mccollections" type="StringVec"> </parameter>
</processor>

 <processor name="HitGlobalToLocal" type="EUTelProcessorCoordinateTransformHits">
 <!--EUTelLocaltoGlobalHitMaker is responsible to change local coordinates to global. This is done using the EUTelGeometryClass-->
  <!--Local input hit collection name-->
  <parameter name="hitCollectionNameInput" type="string" lcioInType="TrackerHit"> fitpoints </parameter>
  <!--Global output hit collection name-->
  <parameter name="hitCollectionNameOutput" type="string" lcioOutType="TrackerHit"> fitpoints_local </parameter>
  <!--Set to true to undo the alignment instead-->
  <parameter name="Undo Alignment (boolean)" type="bool" value="true"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="TrackDumper" type="EUTelAPIXTbTrackTuple">
 <!--Prepare tbtrack style n-tuple with track fit results-->
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="string" lcioInType="Track"> track </parameter>
  <!--Name of the plane-wide hit-data hit collection-->
  <parameter name="InputTrackerHitCollectionName" type="string" lcioInType="TrackerHit"> fitpoints_local </parameter>
  <!--Int std::vector containing the IDs of the DUTs-->
  <parameter name="DUTIDs" type="IntVec"> 20 21 </parameter>
  <!--DUT zero surpressed data colection name-->
  <parameter name="DutZsColName" type="string" value="zsdata_apix"/>
  <!--Path/File where root-file should be stored-->
  <parameter name="OutputPath" type="string" value="NTuple.root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int" value="@MaxRecordNumber@"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool" value="false"/-->
</processor>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> hit </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@FilePrefix@-daftrack.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>
