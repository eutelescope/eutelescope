<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Wed Jan 30 17:48:52 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="HitLocalToGlobal"/>
      <processor name="PedeToGEAR"/>
      <processor name="MyEUTelMilleGBL"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles">@LcioPath@/@FilePrefix@-hitmaker.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE0"/>
   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-alignmentGBL_newGBL"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="HitLocalToGlobal" type="EUTelProcessorCoordinateTransformHits">
 <!--EUTelLocaltoGlobalHitMaker is responsible to change local coordinates to global. This is done using the EUTelGeometryClass-->
  <!--Local input hit collection name-->
  <parameter name="hitCollectionNameInput" type="string" lcioInType="TrackerHit"> local_hit </parameter>
  <!--Global output hit collection name-->
  <parameter name="hitCollectionNameOutput" type="string" lcioOutType="TrackerHit"> hit </parameter>
  <!--Set to true to undo the alignment instead-->
  <!--parameter name="Undo Alignment (boolean)" type="bool" value="false"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="PedeToGEAR" type="EUTelPedeGEAR">
 <!--EUTelPedeGEAR calls PEDE to process a MILLE binary file and create an updated GEAR file with the updated MILLEPEDE II alignment constants.-->
  <!--Number of alignment constants used. Available mode are: 
		XYShiftsRotZ - shifts in the X and Y directions and a rotation around the Z axis,
		XYShifts - only shifts in the X and Y directions
		XYShiftsAllRot - shifts in the X,Y and Z directions and rotations around all three axis-->
  <parameter name="AlignMode" type="string"> XYShiftsRotZ </parameter>
  <!--Exclude planes from fit according to their sensor ids.-->
  <parameter name="ExcludePlanes" type="IntVec"> @ExcludePlanes@ </parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec"> @FixedPlanes@ </parameter>
  <!--Suffix for the new GEAR file, set to empty string (this is not default!) to overwrite old GEAR file-->
  <parameter name="NewGEARSuffix" type="string"> @GEARSuffix@ </parameter>
  <!--Offset scale factor.-->
  <parameter name="OffsetScaleFactor" type="int"> 1 </parameter>
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string"> @PedeSteerFile@ </parameter>
  <!--Apply the obtained rotation to the preexisting offset vector or not..-->
  <parameter name="RotateOffsetVec" type="bool"> true </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>

 <processor name="MyEUTelMilleGBL" type="EUTelMilleGBL">
 <!--EUTelMilleGBL uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Hit collections name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--Number of alignment constants used. Available mode are: 
1 - shifts in the X and Y directions and a rotation around the Z axis,
2 - only shifts in the X and Y directions
3 - (EXPERIMENTAL) shifts in the X,Y and Z directions and rotations around all three axis-->
  <parameter name="AlignMode" type="string" value="XYShiftsRotZ"/>
  <!--This is the name of the alignment collection to be saved into the slcio file-->
  <!--parameter name="AlignmentConstantCollectionName" type="string" value="alignment"/-->
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value=""/> 
  <!--Set how many hits (=planes) can be missing on a track candidate.-->
  <!--parameter name="AllowedMissingHits" type="int" value="0"/-->
  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="@MilleBinaryFile@"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <parameter name="triCut" type="float" value="@TripletCut@"/>
  <parameter name="driCut" type="float" value="@DripletCut@"/>
  <parameter name="sixCut" type="float" value="@SixCut@"/>
  <parameter name="slopeCut" type="float" value="@SlopeCut@"/>
  <parameter name="Ebeam" type="double" value="@BeamEnergy@"/>
  <!--Is this the first alignment step? yes: 1 , no: 0-->
  <parameter name="IsFirstAlignStep" type="int" value="@isFirstAlignStep@"/>
  <!--Exclude planes from fit according to their sensor ids.-->
  <parameter name="ExcludePlanes" type="IntVec">@ExcludePlanes@ </parameter>
  <!--Fixes the given alignment parameters in the fit if alignMode==3 is used. For each sensor an integer must be specified (If no value is given, then all parameters will be free). bit 0 = x shift, bit 1 = y shift, bit 2 = z shift, bit 3 = alpha, bit 4 = beta, bit 5 = gamma. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="FixParameter" type="IntVec"> 24 24 24 24 24 24 </parameter-->
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec">@FixedPlanes@ </parameter>
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string" value="hotpixel_apix"/-->
  <!--Selects the source of input hits.
0 - hits read from hitfile with simple trackfinding. 
1 - hits read from output of tracking processor. 
2 - Test mode. Simple internal simulation and simple trackfinding. 
3 - Mixture of a track collection from the telescope and hit collections for the DUT (only one DUT layer can be used unfortunately)-->
  <parameter name="InputMode" type="int" value="0"/>
  <!--Maximal number of track candidates.-->
  <!--parameter name="MaxTrackCandidates" type="int" value="@AlignTrackCandidates@"/-->
  <!--Maximal number of track candidates (Total).-->
  <parameter name="MaxTrackCandidatesTotal" type="int" value="@AlignTrackCandidatesTotal@"/>
  <!--Remove Mimosa26 clusters with a charge (i.e. number of fired pixels in cluster) below or equal to this value-->
  <!--parameter name="MimosaClusterChargeMin" type="int" value="1"/-->
  <!--Use only events with one hit in every plane.-->
  <!--parameter name="OnlySingleHitEvents" type="int" value="0"/-->
  <!--Use only events with one track candidate.-->
  <!--parameter name="OnlySingleTrackEvents" type="int" value="0"/-->
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="@PedeSteerFile@"/>
  <!--Start values for the alignment for the angle alpha.-->
  <!--parameter name="PedeUserStartValuesAlpha" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for the angle beta.-->
  <!--parameter name="PedeUserStartValuesBeta" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Z direction.-->
  <!--parameter name="PedeUserStartValuesZ" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string" value="reference"/-->
  <!--Maximal values of the hit residuals in the X direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionZ" type="FloatVec"> 1 1 1 1 1 1 </parameter-->
  <!--Execute the pede program using the generated steering file.-->
  <parameter name="RunPede" type="int" value="0"/>
  <!--Resolution of the telescope for Millepede (sigma_x=sigma_y.-->
  <parameter name="TelescopeResolution" type="float" value="8"/>
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float" value="3"/-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec"> 20000 40000 60000 80000 100000 120000 </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float" value="0.0005"/-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float" value="0.0005"/-->
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int" value="0"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>
