<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Fri Aug  2 11:32:24 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="LoadRefHitDB"/>
      <processor name="LoadPreAlignment"/>
      <processor name="ApplyPreAlignment"/>
      <processor name="Correlator"/>
      <processor name="Align"/>
      <processor name="EUTelUtilityPrintEventNumber"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @InputFile@ </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

  <processor name="AIDA" type="AIDAProcessor">
    <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
    <!-- compression of output file 0: false >0: true (default) -->
    <parameter name="Compress" type="int" value="1"/>
    <!-- filename without extension-->
    <parameter name="FileName" type="string" value="@HistoFile@"/>
    <!-- type of output file root (default) or xml )-->
    <parameter name="FileType" type="string" value="root"/>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
    <!--parameter name="Verbosity" type="string" value=""/-->
  </processor>

  <processor name="LoadRefHitDB"     type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit  @RefHitDBFile@ referenceHit  </parameter>
  </processor>

  <processor name="LoadPreAlignment" type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @PreAlignmentDBFile@ alignment </parameter>
  </processor>

  <processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
    <!--"alignmentCollectionNames" has to be lowercase! -->
    <parameter name="alignmentCollectionNames"> prealign </parameter>
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> PreAlignedHit </parameter>
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <parameter name="DEBUG" type="bool" value="false"/>
    <parameter name="PrintEvents" type="int" value="0"/>
 </processor>

 <processor name="Correlator" type="EUTelCorrelator">
 <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--Minimum allowed cluster charge to be taken into account for the correlation plots (default = 2)-->
  <!--parameter name="ClusterChargeMinimum" type="int">2 </parameter-->
  <!--Dump the offset X and Y values calculated from the correlation bands (default = true)-->
  <parameter name="DumpOffset" type="bool"> false </parameter>
  <!--How many events are needed to get reasonable correlation plots (and Offset DB)? (default=1000)-->
  <parameter name="Events" type="int"> @BoxCutEventsMax@ </parameter>
  <!--SensorID of fixed plane-->
  <!--parameter name="FixedPlane" type="int">0 </parameter-->
  <!--List of cluster collections-->
  <parameter name="InputClusterCollections" type="StringVec" lcioInType="TrackerPulse"> </parameter>
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> PreAlignedHit  </parameter>
  <!--If there are more then this number of correlated hits (planes->track candidate) (default=5)-->
  <parameter name="MinNumberOfCorrelatedHits" type="int">5 </parameter>
  <!--This is the name of the LCIO file name with the output offset db (add .slcio)-->
  <!--parameter name="OffsetDBFile" type="string">offset-db.slcio </parameter-->
  <!--reference hit collection name -->
   <parameter name="ReferenceCollection" type="string" value="refhit"/>
  <!--Maximal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMax" type="FloatVec">   @BoxCutVecXMax@ </parameter>
  <!--Minimal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMin" type="FloatVec">   @BoxCutVecXMin@  </parameter>
  <!--Maximal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMax" type="FloatVec">   @BoxCutVecYMax@  </parameter>
  <!--Minimal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMin" type="FloatVec">   @BoxCutVecYMin@  </parameter>
 <!--Do you want the reference hit collection to be used for coordinate transformations?-->
  <parameter name="UseReferenceCollection" type="bool">true </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
</processor>


 <processor name="Align" type="EUTelMille">
 <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
  <!--Hit collections name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> PreAlignedHit </parameter>
  <!--Track collection name. This is only relevant if InputMode is set to larger to 1-->
  <!--parameter name="TrackCollectionName" type="string" lcioInType="Track"> tracks </parameter-->
  <!--Number of alignment constants used. Available mode are: 
1 - shifts in the X and Y directions and a rotation around the Z axis,
2 - only shifts in the X and Y directions
3 - (EXPERIMENTAL) shifts in the X,Y and Z directions and rotations around all three axis-->
  <parameter name="AlignMode" type="int" value="3"/>
  <!--This is the name of the alignment collection to be saved into the slcio file-->
  <!--parameter name="AlignmentConstantCollectionName" type="string" value="alignment"/-->
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value="@AlignmentDBFile@"/>
  <!--Set how many hits (=planes) can be missing on a track candidate.-->
  <!--parameter name="AllowedMissingHits" type="int" value="0"/-->
  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="@DatabasePath@/@FilePrefix@-align-mille.bin"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <parameter name="DistanceMax" type="float" value="@DistanceMax@"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes. One value for each neighbor planes. DistanceMax will be used for each pair if this vector is empty.-->
  <!--parameter name="DistanceMaxVec" type="FloatVec"> </parameter-->
  <!--Exclude planes from fit according to their sensor ids.-->
  <parameter name="ExcludePlanes" type="IntVec" value="@ExcludePlanes@"/>
  <!--Fixes the given alignment parameters in the fit if alignMode==3 is used. For each sensor an integer must be specified (If no value is given, then all parameters will be free). bit 0 = x shift, bit 1 = y shift, bit 2 = z shift, bit 3 = alpha, bit 4 = beta, bit 5 = gamma. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="FixParameter" type="IntVec"> @FixParameter@ </parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec" value="@FixedPlanes@"/>
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--Selects the source of input hits.
0 - hits read from hitfile and simple straight line trackfinding will be  performed internally. 
1 - hits read from output of tracking processor. 
2 - Test mode. Simple internal simulation and simple trackfinding. 
3 - Mixture of a track collection from the telescope and hit collections for the DUT (only one DUT layer can be used unfortunately)-->
  <parameter name="InputMode" type="int" value="0"/>
  <!--Maximal number of track candidates in a event.-->
  <parameter name="MaxTrackCandidates" type="int" value="200000"/>
  <!--Stop processor after this maximum number of track candidates (Total) is reached.-->
  <parameter name="MaxTrackCandidatesTotal" type="int" value="200000"/>
  <!--Remove Mimosa26 clusters with a charge (i.e. number of fired pixels in cluster) below or equal to this value-->
  <parameter name="MimosaClusterChargeMin" type="int" value="0"/>
  <!--Use only events with one hit in every plane.-->
  <parameter name="OnlySingleHitEvents" type="bool" value="0"/>
  <!--Use only events with one track candidate.-->
  <parameter name="OnlySingleTrackEvents" type="bool" value="0"/>
  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="@DatabasePath@/@FilePrefix@-pede-steer.txt"/>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string" value="refhit"/>
  <!--Maximal values of the hit residuals in the X direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMax" type="FloatVec" value="@ResidualXMax@"/>
  <!--Minimal values of the hit residuals in the X direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMin" type="FloatVec" value="@ResidualXMin@"/>
  <!--Maximal values of the hit residuals in the Y direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMax" type="FloatVec" value="@ResidualYMax@"/>
  <!--Minimal values of the hit residuals in the Y direction for a track. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMin" type="FloatVec" value="@ResidualYMin@"/>
 <!--Execute the pede program using the generated steering file.-->
  <parameter name="RunPede" type="bool" value="@RunPede@"/>
  <!--(default) Resolution of the telescope for Millepede (sigma_x=sigma_y) used only if plane dependent resolution is set inconsistently.-->
  <parameter name="TelescopeResolution" type="float" value="10"/>
   <!--X resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResolutionX" type="FloatVec"> @ResolutionX@ </parameter>
  <!--Y resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResolutionY" type="FloatVec"> @ResolutionY@ </parameter>
  <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResolutionZ" type="FloatVec"> @ResolutionZ@ </parameter>
  <!--Do you want the reference hit collection to be used for coordinate transformations?-->
  <!--parameter name="UseReferenceCollection" type="bool" value="true"/-->
  <!--Use cuts on the residuals to reduce the combinatorial background.-->
  <parameter name="UseResidualCuts" type="bool" value="@UseResidualCuts@"/>
  <!--Do not use all pixels for alignment, only these in the rectangular (A|B) e.g. (0,0) and (C|D) e.g. (100|100) of sensor S. Type in the way S1 A1 B1 C1 D1 S2 A2 B2 C2 D2 ...-->
  <!--parameter name="UseSensorRectangular" type="IntVec"> </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>


<processor name="EUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
  <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int"> 100000 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool">false </parameter-->
</processor>


</marlin>
