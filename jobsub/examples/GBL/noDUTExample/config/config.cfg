##This the GBL examples without a DUT. 
# It is a series of runs taken at different beam energies and magnetic field strengths. See the runlist
[DEFAULT]

# The path to this config file
BasePath		= %(eutelescopepath)s/jobsub/examples/GBL/noDUTExample  
# Set the folder which contains the raw/native data files
NativePath		=  /afs/desy.de/group/telescopes/EutelTestData/TestExamplesGBL/TestExampleNoDUT 
# The location of the steering templates
TemplatePath		= %(BasePath)s/steering/

# The GEAR file describing the detector geometry, this is passed from the
# runlist.csv
GearFile    	        = @GearGeoFile@

# Path to the GEAR files
GearFilePath    	= %(BasePath)s/geometry

# The XML file with histogram information
HistoInfoFile   	= %(BasePath)s/steering/histoinfo.xml

# Formats the output; @RunNumber@ is the current run number padded with leading
# zeros to 6 digits
FilePrefix   	 	= run@RunNumber@	

# Which run number to use for hot pixel determination
HotpixelRunNumber	= @RunNumber@

# Skip events in a run; set to 0 for all data
SkipNEvents		= 0

# Output subfolder structure
DatabasePath		= %(BasePath)s/output/database
HistogramPath		= %(BasePath)s/output/histograms
LcioPath            	= %(BasePath)s/output/lcio
LogPath			= %(BasePath)s/output/logs

AlibavaHistoInfo =%(BasePath)s/steering/histoinfo_alibava.xml

# Limit processing of a run to a certain number of events

MaxRecordNumber		= 10000


# The verbosity used by the EUTelescope producers (i.e. MESSAGE, DEBUG, ERROR
# with appended level from 0..9, e.g. MESSAGE5). If you set this to DEBUG0 but
# you do not see any DEBUG messages, make sure that you set CMAKE_BUILD_TYPE to
# Debug in the $EUTELESCOPE/CMakeList.txt file.

Verbosity		= MESSAGE5
#Verbosity		= SILENT
#Verbosity		= DEBUG0 


# Section for the converter step
[converter]


# Section for the clustering step
[clustering]
ClusterLimits =   20 @xclumin@ @xclumax@ @yclumin@ @yclumax@    21 @xclumin@ @xclumax@ @yclumin@ @yclumax@

#ROICut			= 10 10 1142 566
ROICut			= 40 40 1102 546

ResidualsXMax =   20.0  20.0  20.0   20.0  20.0  20.0           
ResidualsXMin =  -20.0 -20.0 -20.0  -20.0 -20.0 -20.0          
ResidualsYMax =   20.0  20.0  20.0   20.0  20.0  20.0           
ResidualsYMin =  -20.0 -20.0 -20.0  -20.0 -20.0 -20.0           


# Section for the filter step
[filter]

# Exclude 10 pixels in all directions
#ROICut			= 10 10 1142 566
ROICut			= 40 40 1102 546

[correlator]
HitInputCollectionName=hit_filtered_m26

[hitlocal]
NoEvents = 9999
ResidualsXMax =  5.  5.  5.   100.    5.  5.  5.
ResidualsXMin = -5. -5. -5.  -100.   -5. -5. -5.
ResidualsYMax =  5.  5.  5.   100.    5.  5.  5.
ResidualsYMin = -5. -5. -5.  -100.   -5. -5. -5.
#Used so we can identify strip sensors. NOTE: This is done in the local frame. So if strip is rotated you must fix y axis rather than x.
ExcludedPlanesXCoord=
ExcludedPlanesYCoord=
#If we want to exclude the full plane:
ExcludedPlanes=0 5
[prealign]
ResidualsXMax        =    100.0  100.0  100.0    700.0  800.0  900.0 
ResidualsXMin        =   -100.0 -100.0 -100.0   -700.0 -800.0 -900.0 
ResidualsYMax        =    100.0  100.0  100.0    700.0  800.0  900.0 
ResidualsYMin        =   -100.0 -100.0 -100.0   -700.0 -800.0 -900.0 


[patternRecognition]
#241
#TripletConnectDistCut = 0.5 0.5
#TripletSlopeCuts = 0.01 0.01
#DoubletCenDistCut = 1 1
#DoubletDistCut = 1 1
#284
#Link the hits on the outer planes of each arm with x/y smaller than this in the global frame 
DoubletDistCut = 1 1
#Link central hit with distance less than this in x/y from predicted position using outer hits from cut DoubletDistCut. 
DoubletCenDistCut = 1 1
#Create triplets from hits on each arm now.
#Predicted position at cetral point and slope must agree with the cut given:
#Not this will not cut track of a particular slope, only the if there is a difference between the triplets prediction.
TripletConnectDistCut = 0.1 0.1
TripletSlopeCuts = 0.01 0.01
#These planes will not create a state.
excludeplanes=   
#Plane dimension is needed to determine in what directions should we compare track and DUT hit
planeDimensions= 2 2 2 2 2 2 
#This is used to determine the initial curvature of the track at plane 0
InitialDisplacement=0
HitInputCollectionName=hit_filtered_m26
TrackCandHitOutputCollectionName=track_candidates
[GBLTrackFit]
IncMed = 1
rm26                    = 0.003
xResolutionPlane        = %(rm26)s %(rm26)s 1000000  %(rm26)s %(rm26)s %(rm26)s  
yResolutionPlane        = %(rm26)s %(rm26)s 1000000  %(rm26)s %(rm26)s %(rm26)s  
#Outlier treatment not done for this example.
GBLMEstimatorType=
dropCollectionName = 
inputCollectionName = track_candidates
outputCollectionName = tracks 
lcioInputName = trackcand
lcioOutputName = GBLtracks
histoName=GBLtracks
Planes = 0 1 2 3 4 5 

[GBLTrackSelection]
dropCollectionName = 
inputCollectionName = tracks
#Collection name must follow C/C++ standards. So no "-" for example
outputCollectionName = tracksSelection 
lcioInputName = GBLtracks
lcioOutputName = GBLtracks-selection
histoName=GBLtracks-selection
mustHaveHit=
mustNotHaveHit=  
chi2NormCut=10
#This is used in the analysis processor within this steering file
Planes = 0 1 2 3 4 5 

[GBLAlign]
IncMed = 1
#Input lcio and collection name.
#The tracks from pattern recogntion are used directly and then turned to GBL tracks internally. 
#The global derivatives take the results from pattern recognition to calculate the alignment parameters.
lcioInputName=trackcand
inputCollectionName=track_candidates
BeamCharge=-1
##These are a list of plane alignment directions which will be fixed.
# At least 2 planes must be fixed without magnetic field and 3 with. 
FixXshifts=0 3  5  
FixYshifts=0 3  5  
FixZshifts=0 3  5  
FixXrot=   0 3   5 
FixYrot=   0 3   5 
FixZrot=   0  5    
##Estimate resolution to pass to millepede.
# If alignment is off by quite a margin this will have to me increased.
r = 0.002
#This resolution is varied in iterative alignment to account for systematic errors present in the final alignment by millepede.
xResolutionPlane        =  %(r)s %(r)s %(r)s  %(r)s %(r)s %(r)s 
yResolutionPlane        =  %(r)s %(r)s %(r)s  %(r)s %(r)s %(r)s 
#Output binary file which contains the full setup information and tracks.
MilleBinaryFilename=millepede.bin
#This file is create to run millepede. Done internally but can run this afterwards with pede steer.txt
MilleSteeringFilename = steer.txt
#Alignment parameters determined from global parameters. 
MilleResultFilename= millepede.res
#Aligned gear.
GearAlignedFile = alignedGear-iter10-%(FilePrefix)s.xml
#This used to reduce the impact of outliers on individual track fits.
#This is done internally by millepede, 4 is the number of iterations this is done for.
#So this gives, iteration: 1)No downweighting 2/3)Huber 4)Cauchy
outlierdownweighting=outlierdownweighting 4
#This is used by GBL and also takes into account outliers. 
#This is dealt with by millepede and is not used here.
GBLMEstimatorType=
#This is the name of the output lcio. This is empty at the moment since we only need the gear file to be populated with the correct geometry
TracksOutputCollectionName="Alignment-tracks"
#These planes are completely excluded from the analysis. The scattering from the plane however is still taken into account.
ExcludePlanes="" 
#This is the cut made by millepede on the first and second iteration.
#The cut is expressed as factor which you multiple the chi2 value which corresonds to 3 standard deviations. 
#This value is then used as your cut. Here the cut is huge with: cut on first iteration =  30*(chi2 value at 3 standard deviations) 
pede          = chiscut 30 6

[TrackAnalysis]
inputCollectionNameGBLTracks=tracks
Planes = 0 1 2 3 4 5

[iterativeAlignment]
r="0.006" 
xres="0.006 $r $r $r $r 0.006"
yres="0.006 $r $r $r $r 0.006"
minTracksPerEventAcceptance=0.1  
ResidualsRMax="2.5" 
inputGearInitial="gear-241-good.xml" 
allPlanes="0 1 2 3 4 5"
allPlanesFixed="0     5"  

[PlotTrack]
