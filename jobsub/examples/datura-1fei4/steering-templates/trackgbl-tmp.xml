<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Fri Aug  2 11:50:05 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="TrackSearch"/>
      <!-- processor name="GBLTrackFit"/ -->
      <group name="GBLTrackFit"/>
      <processor name="Save"/>
      <processor name="PrintEventNumber"/>
   </execute>

   <global>
      <!-- parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-trackcand.slcio </parameter -->
      <parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-hitlocal.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearAlignedFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-trackgbl"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>


 <processor name="TrackSearch" type="EUTelProcessorTrackingHelixTrackSearch">
 <!--EUTelProcessorTrackingHelixTrackSearch preforms track pattern recognition.-->
  <!--Beam charge [e]-->
  <parameter name="BeamCharge" type="double">-1. </parameter>
  <!--Maximal allowed distance between hits entering the recognition step
            per 10 cm space between the planes. One value for each neighbor planes.
            DistanceMax will be used for each pair if this vector is empty. Units are mm.-->
  <parameter name="ResidualsRMax" type="Float" value="@ResidualsRMax@" />
  <!--parameter name="ResidualsRMax" type="double"> 2.0 </parameter-->
  <!--Beam charge [GeV]-->
  <parameter name="BeamEnergy" type="double"> @BeamEnergy@ </parameter>
  <!--Name of histogram info xml file-->
  <parameter name="HistogramInfoFilename" type="string" value="@HistoInfoFile@"/>
  <!--Input hits collection name-->
  <parameter name="HitInputCollectionName" type="string" lcioInType="TrackerHit"> hit_filtered </parameter>
  <!--Name of the hot pixel collection -->
  <!-- parameter name="HotPixelCollectionName" type="string">hotpixel_m26 </parameter-->
  <!--Maximal number of missing hits on a track candidate-->
  <parameter name="MaxMissingHitsPerTrack" type="int"> @MaxMissingHitsPerTrack@ </parameter>
  <!--Maximal number of track candidates to be found in events-->
  <!--parameter name="MaxNTracksPerEvent" type="int">100 </parameter-->
  <!--Output track candidates hits collection name-->
  <parameter name="TrackCandHitOutputCollectionName" type="string" lcioOutType="Track"> track_candidates </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">MESSAGE3 </parameter>
 </processor>

 <group name="GBLTrackFit" >
 <!--EUTelProcessorTrackingGBLTrackFit performs track fits using GBL optionally writing data files for MILLEPEDE II.-->
  <!--Input track candidates hits collection name-->
  <parameter name="TrackCandHitInputCollectionName" type="string" lcioInType="Track"> track_candidates </parameter>
  <!--Output tracks collection name-->
  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <!--parameter name="AlignmentConstantLCIOFile" type="string" value="alignment.slcio"/-->
  <!--Alignment mode specifies alignment degrees of freedom to be considered
0 - No alignment at all. Simply fit tracks assuming that alignment is correct
1 - Alignment of XY shifts
2 - Alignment of XY shifts + rotations around Z
3 - Alignment of XYZ shifts + rotations around Z
4 - Alignment of XY shifts + rotations around X and Z
5 - Alignment of XY shifts + rotations around Y and Z
6 - Alignment of XY shifts + rotations around X,Y and Z
7 - Alignment of XYZ shifts + rotations around X,Y and Z
-->
  <parameter name="AlignmentMode" type="int" value="0"/>
  <!--Ids of planes to be used in alignment-->
  <parameter name="Planes" type="IntVec"> @Planes@ </parameter>
  <!-- on the order of appearing of the plane Ids (Planes param.) list X resolution of every plane /-->
  <parameter name="xResolutionPlane" type="FloatVec"> @xResolutionPlane@ </parameter>
  <!-- on the order of appearing of the plane Ids (Planes param.) list Y resolution of every plane /-->
  <parameter name="yResolutionPlane" type="FloatVec"> @yResolutionPlane@ </parameter>
  <!--parameter name="AlignmentPlanes" type="IntVec"> </parameter-->
  <!--Beam energy [GeV]-->
  <parameter name="BeamEnergy" type="double" value="@BeamEnergy@"/>
  <!--Ids of planes for which rotation around X will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesXrotation" type="IntVec"> </parameter-->
  <!--Ids of planes for which X shift will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesXshift" type="IntVec"> </parameter-->
  <!--Ids of planes for which rotation around Y will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesYrotation" type="IntVec"> </parameter-->
  <!--Ids of planes for which Y shift will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesYshift" type="IntVec"> </parameter-->
  <!--Ids of planes for which rotation around Z will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesZrotation" type="IntVec"> </parameter-->
  <!--Ids of planes for which Z shift will be fixed during millepede call-->
  <!--parameter name="FixedAlignmentPlanesZshift" type="IntVec"> </parameter-->
  <!--GBL outlier down-weighting option (t,h,c)-->
  <!--parameter name="GBLMEstimatorType" type="string" value=""/-->
  <!--Name of histogram info xml file-->
  <parameter name="HistogramInfoFilename" type="string" value="@HistoInfoFile@"/>
  <!--Name of the Millepede binary file-->
  <!--parameter name="MilleBinaryFilename" type="string" value="mille.bin"/-->
  <!--Maximum chi2 of a track candidate that goes into millepede-->
  <parameter name="MilleMaxChi2Cut" type="double" value="@Chi2Cut@"/>
  <!--Name of the Millepede result file-->
  <!--parameter name="MilleResultFilename" type="string" value="millepede.res"/-->
  <!--Name of the Millepede steering file to be created-->
  <!--parameter name="MilleSteeringFilename" type="string" value="pede-steer.txt"/-->
  <!--FOR EXPERTS: List of commands that should be included in the pede steering file. Use '\' to seperate options and introduce a line break.-->
  <!--parameter name="PedeSteeringAdditionalCmds" type="StringVec"> </parameter-->
  <!--Execute the pede at the end of processing using the generated steering file.-->
  <!--parameter name="RunPede" type="bool" value="false"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->

  <processor name="GBLTrack" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec"> </parameter>
  </processor>

<!--
  <processor name="GBLTrack0" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection0</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">0 </parameter>
  </processor>

  <processor name="GBLTrack1" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection1</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">1 </parameter>
  </processor>

  <processor name="GBLTrack2" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection2</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">2 </parameter>
  </processor>

  <processor name="GBLTrack3" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection3</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">3 </parameter>
  </processor>

  <processor name="GBLTrack4" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection4</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">4 </parameter>
  </processor>

  <processor name="GBLTrack5" type="EUTelProcessorTrackingGBLTrackFit">
    <parameter name="TracksOutputCollectionName" type="string" lcioOutType="Track"> TrackCollection5</parameter>
    <parameter name="ExcludePlanesFromFit" type="IntVec">5 </parameter>
  </processor>
-->

  </group>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> hit_filtered aligned_track_candidates </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@FilePrefix@-trackgbl.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="PrintEventNumber" type="EUTelUtilityPrintEventNumber">
 <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->
  <parameter name="EveryNEvents" type="int" value="100"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string" value="MESSAGE3"/>
  <!--print the event timestamp as read from LCIO-->
  <parameter name="printTimestamp" type="bool" value="true"/>
</processor>

</marlin>
