<?xml version="1.0" encoding="us-ascii"?>
<!--

==========================================================================================
                     Steering file template for the pysub framework

                               ==> fitter-tmp.xml <===

Version: $Id: fitter-tmp.xml,v 1.7 2009-08-01 13:59:45 bulgheroni Exp $
==========================================================================================

--> 

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="LoadRefHitDB"/>
      <processor name="LoadPreAlignment"/>
      <processor name="ApplyPreAlignment"/>
      <processor name="LoadAlignment"/>
      <processor name="ApplyAlignment"/>
      <processor name="DafFitter"/>
      <!--processor name="X0Processor"/-->
      <processor name="Save"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @InputFile@ </parameter>
      <parameter name="GearXMLFile" value="@GearFolder@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
  <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@AIDAVerbosity@"/@LocalVerbosityCommentRight@>
  <!--compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!--filename without extension-->
  <parameter name="FileName" type="string" value="@HistoFolder@/@RunNumber@-track-histo"/>
  <!--type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string" value="root"/>
 </processor>

  <processor name="LoadRefHitDB"     type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> refhit  @DBFolder@/@RunNumber@-refhit-db.slcio referenceHit  </parameter>
  </processor>

  <processor name="LoadPreAlignment" type="ConditionsProcessor">
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@LoadPreAlignmentVerbosity@"/@LocalVerbosityCommentRight@>
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @DBFolder@/@AlignmentRunNumber@-prealign-db.slcio        alignment </parameter>
  </processor>

  <processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@ApplyPreAlignmentVerbosity@"/@LocalVerbosityCommentRight@>
    <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
    <parameter name="alignmentCollectionNames"> prealign </parameter>
    <parameter name="InputHitCollectionName"  type="string" lcioInType="TrackerHit"> hit </parameter>
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedPre </parameter>
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <parameter name="HistogramSwitch" type="bool" value="true"/>
    <parameter name="DEBUG" type="bool" value="false"/>
    <parameter name="PrintEvents" type="int" value="0"/>
  </processor>


 <processor name="LoadAlignment" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@LoadAlignmentVerbosity@"/@LocalVerbosityCommentRight@>
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment @DBFolder@/@AlignmentRunNumber@-align-db.slcio alignment </parameter>
 </processor>

 <processor name="ApplyAlignment" type="EUTelApplyAlignmentProcessor">
  <!--Apply to the input hit the alignment corrections-->
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@ApplyAlignmentVerbosity@"/@LocalVerbosityCommentRight@>
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedPre </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedHit</parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track"> AlignedTrack </parameter>
  <!--Available methods are:
    0 -> shift only 
    1 -> rotation first 
    2 -> shift first -->
  <parameter name="CorrectionMethod" type="int" value="1"/>
  <!--List of alignment collections that were applied to the DUT -->
  <parameter name="alignmentCollectionNames"> alignment </parameter>
  <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
  <parameter name="DoAlignCollection" type="bool" value="true"/>
  <!--Enable or disable histograms-->
  <parameter name="HistogramSwitch" type="bool" value="true"/>
  <parameter name="DEBUG" type="bool" value="false"/>
  <parameter name="PrintEvents" type="int" value="0"/>
 </processor>

  <processor name="DafFitter" type="EUTelDafFitter">
    <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@FitterVerbosity@"/@LocalVerbosityCommentRight@>
    <parameter name="TelescopePlanes" type="IntVec"> 0 1 2 3 4 5 </parameter>
    <parameter name="DutPlanes" type="IntVec">  </parameter>
    <parameter name="FitDuts" type="bool" value="@FitDuts@"/>
    <parameter name="MakePlots" type="bool" value="@MakePlots@"/>
    <parameter name="RequireNTelPlanes" type="float" value="6"/>
    <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter>
    <parameter name="TrackCollectionName" type="string" lcioInType="Track"> AlignedTrack </parameter>
    <parameter name="AlignmentCollectionNames"> prealign alignment </parameter>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <parameter name="Ebeam" type="float" value="@BeamEnergy@"/>
    <parameter name="TelResolutionX" type="float" value="@TelResolutionX@"/>
    <parameter name="TelResolutionY" type="float" value="@TelResolutionY@"/>
    <parameter name="DutResolutionX" type="float" value="2500" />
    <parameter name="DutResolutionY" type="float" value="500"/>
    <parameter name="NominalDxdz" type="float" value="0.0"/>
    <parameter name="NominalDydz" type="float" value="0.0"/>
    <parameter name="FinderRadius" type="float" value="1000" />
    <parameter name="Chi2Cutoff" type="float" value="100000000"/>
    <parameter name="MaxChi2OverNdof" type="float" value="@MaxChi2OverNdof@"/>
    <parameter name="NDutHits" type="int" value="0"/>
  </processor>

 <processor name="Fitter" type="EUTelTestFitter">
  <!--Analytical track fitting processor for EUDET telescope--> 
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@FitterVerbosity@"/@LocalVerbosityCommentRight@>
  <parameter name="alignmentCollectionNames" type="vec" >   alignment </parameter>
  <!--Name of the input TrackerHit collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter>
  <!--Collection name for corrected particle positions-->
  <parameter name="CorrectedHitCollectionName" type="string" lcioOutType="TrackerHit"> corrhits </parameter>
  <!--Collection name for fitted particle hits (positions)-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> fithits </parameter>
  <!--Collection name for fitted tracks-->
  <parameter name="OutputTrackCollectionName" type="string" lcioOutType="Track"> track1 </parameter>
 <!--Ids of layers for which alignment corrections are given-->
  <!--parameter name="AlignLayerIDs" type="IntVec"> </parameter-->
  <!--Rotation around Z for layer alignment-->
  <!--parameter name="AlignLayerRotZ" type="FloatVec"> </parameter-->
  <!--Alignment corrections in X for these layers-->
  <!--parameter name="AlignLayerShiftX" type="FloatVec"> </parameter-->
  <!--Alignment corrections in Y for these layers-->
  <!--parameter name="AlignLayerShiftY" type="FloatVec"> </parameter-->
  <!--Allow same hit to be used in more than one track-->
  <parameter name="AllowAmbiguousHits" type="bool" value="false"/>
  <!--Allowed number of missing hits in the track-->
  <parameter name="AllowMissingHits" type="int" value="@AllowedMissingHits@"/>
  <!--Allowed number of hits removed from the track-->
  <parameter name="AllowSkipHits" type="int" value="@AllowedSkipHits@ "/>
  <!--Decide now whether you want to rely on the track candidate slope permanence in X and Y, default=true -->
  <parameter name="UseSlope"   type="bool"  value="true"/>
  <!--Set the allowed maximum difference of the slope in X (from plane to plane), default = 0.01 -->
  <parameter name="SlopeXLimit"   type="float" value="0.01"/>
  <!--Set the allowed maximum difference of the slope in Y (from plane to plane), default = 0.01 -->
  <parameter name="SlopeYLimit"   type="float" value="0.01"/>
  <!--Maximal allowed (initial) distance between hits in the XY plane between the planes,default = 2. mm -->
  <parameter name="SlopeDistanceMax" type="float" value="@DistanceMax@"/>
  <!--Assumed angular spread of the beam [rad]-->
  <!--parameter name="BeamSpread" type="double" value="0.1"/-->
  <!--Maximum Chi2 for accepted track fit-->
  <parameter name="Chi2Max" type="double" value="@Chi2Max@"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int" value="100"/>
  <!--Beam energy [GeV]-->
  <parameter name="Ebeam" type="double" value="@BeamEnergy@"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFolder@/@HistoInfo@"/>
  <!--Flag for storing input (measured) hits in track-->
  <parameter name="InputHitsInTrack" type="bool" value="true"/>
  <!--Ids of layers for which position masks are applied-->
  <!--parameter name="MaskLayerIDs" type="IntVec"> </parameter-->
  <!--Upper mask edge in X-->
  <!--parameter name="MaskMaxX" type="FloatVec"> </parameter-->
  <!--Upper mask edge in Y-->
  <!--parameter name="MaskMaxY" type="FloatVec"> </parameter-->
  <!--Lower mask edge in X-->
  <!--parameter name="MaskMinX" type="FloatVec"> </parameter-->
  <!--Lower mask edge in Y-->
  <!--parameter name="MaskMinY" type="FloatVec"> </parameter-->
  <!--Maximum number of considered hits per plane-->
  <parameter name="MaxPlaneHits" type="int" value="100"/>
  <!--Chi2 penalty for missing hit in the track-->
  <parameter name="MissingHitPenalty" type="double" value="@MissingHitPenalty@"/>
  <!--Flag for storing output (fitted) hits in track-->
  <parameter name="OutputHitsInTrack" type="bool" value="true"/>
  <!--Ids of layers which should be treated as passive in the fit-->
  <parameter name="PassiveLayerIDs" type="IntVec"> @PassiveLayerIDs@ </parameter>
  <!--Flag for searching multiple tracks in events with multiple hits-->
  <parameter name="SearchMultipleTracks" type="bool" value="true"/>
  <!--Chi2 penalty for removing hit from the track-->
  <parameter name="SkipHitPenalty" type="double" value="@SkipHitPenalty@"/>
  <!--Ids of layers which should NOT be included in the fit-->
  <!--parameter name="SkipLayerIDs" type="IntVec"> </parameter-->
  <!--Flag for using beam direction constraint in the fit-->
  <parameter name="UseBeamConstraint" type="bool" value="false"/> <!--DP -->
  <!--Flag for including DUT measurement in the fit-->
  <parameter name="UseDUT" type="bool" value="false"/>
  <!--Flag for using nominal resolution instead of position errors-->
  <parameter name="UseNominalResolution" type="bool" value="false"/>
  <!--Ids of layers for which position window cut are applied-->
  <!--parameter name="WindowLayerIDs" type="IntVec"> </parameter-->
  <!--Upper window edge in X-->
  <!--parameter name="WindowMaxX" type="FloatVec"> </parameter-->
  <!--Upper window edge in Y-->
  <!--parameter name="WindowMaxY" type="FloatVec"> </parameter-->
  <!--Lower window edge in X-->
  <!--parameter name="WindowMinX" type="FloatVec"> </parameter-->
  <!--Lower window edge in Y-->
  <!--parameter name="WindowMinY" type="FloatVec"> </parameter-->
</processor>

 <processor name="X0Processor" type="EUTelX0Processor">
    <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@X0Verbosity@"/@LocalVerbosityCommentRight@>
    <parameter name="InputTrackCollectionName" type="string" lcioInType="Track"> AlignedTrack </parameter>
    <parameter name="DebugEventCount" type="int" value="100"/>
    <parameter name="CutValue" type="double" value="500000"/>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
 </processor>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <@LocalVerbosityCommentLeft@parameter name="Verbosity" type="string" value="@SaveVerbosity@"/@LocalVerbosityCommentRight@>
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> hit hit_eta3x3 alignedHit_eta3x3 </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!--write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!--name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@ResultsFolder@/@RunNumber@-track.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <parameter name="SplitFileSizekB" type="int" value=""/>
</processor>
   
</marlin>
