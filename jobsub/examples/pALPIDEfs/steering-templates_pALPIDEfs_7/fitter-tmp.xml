<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
Steering File generated by Marlin GUI on Mon Jun 24 17:02:36 2013

WARNING: - Please be aware that comments made in the original steering file were lost.
    - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
    - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

  <execute>
    <processor name="AIDA"/>
    <processor name="LoadRefHitDB"/>
    <processor name="LoadPreAlignment"/>
    <processor name="ApplyPreAlignment"/>
    <processor name="LoadAlignment"/>
    <processor name="MyEUTelAPIXApplyAlignment"/>
    <!--processor name="LoadAlignment1"/-->
    <!--processor name="MyEUTelAPIXApplyAlignment1"/-->
    <!--processor name="LoadAlignment2"/-->
    <!--processor name="MyEUTelAPIXApplyAlignment2"/-->
    <!--processor name="LoadAlignment3"/-->
    <!--processor name="MyEUTelAPIXApplyAlignment3"/-->
    <processor name="Correlator"/>
    <processor name="Fitter"/>
    <processor name="DUTHisto0"/>
    <processor name="DUTHisto1"/>
    <processor name="DUTHisto2"/>
    <!--processor name="DUTHisto3"/-->
    <!--processor name="EUTelFitTuple"/-->
    <processor name="MyEUTelUtilityPrintEventNumber"/>
    <processor name="Save"/>
  </execute>

  <global>
    <!--parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-trackcand.slcio </parameter-->
    <parameter name="LCIOInputFiles"> @LcioPath@/@FilePrefix@-hitmaker.slcio </parameter>
    <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
    <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
    <parameter name="SkipNEvents" value="@SkipNEvents@"/>
    <parameter name="SupressCheck" value="false"/>
    <parameter name="Verbosity" value="@Verbosity@"/>
  </global>

<processor name="AIDA" type="AIDAProcessor">
  <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-fitter_DUT@dutID@"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="LoadRefHitDB" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> refhit @DatabasePath@/@FilePrefix@-referencehit.slcio referenceHit </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="LoadPreAlignment" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> prealign @DatabasePath@/@FilePrefix@-prealignment.slcio alignment </parameter>
  <!--parameter name="SimpleFileHandler" type="StringVec"> prealign @DatabasePath@/run23-28-prealignment.slcio alignment </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="ApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
  <!--Apply to the input hit the alignment corrections-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> prealign </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> alignedPre </parameter>
  <!--Rotation Angle around X axis-->
  <!--parameter name="Alpha" type="double" value="0"/-->
  <!--Available directinos are:
  0 -> direct  
  1 -> reverse -->
  <parameter name="ApplyAlignmentDirection" type="int" value="0"/>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Rotation Angle around Y axis-->
  <!--parameter name="Beta" type="double" value="0"/-->
  <!--Available methods are:
  0 -> shift only 
  1 -> rotation first 
  2 -> shift first -->
  <parameter name="CorrectionMethod" type="int" value="1"/>
  <!--Enable or disable DEBUG mode -->
  <parameter name="DEBUG" type="bool" value="false"/>
  <!--Implement geometry shifts and rotations as described in alignmentCollectionName -->
  <parameter name="DoAlignCollection" type="bool" value="true"/>
  <!--Apply alignment steps in one go. Is supposed to be used for reversealignment in reverse order, like: undoAlignment, undoPreAlignment, undoGear -->
  <!--parameter name="DoAlignmentInOneGo" type="bool" value="false"/-->
  <!--Implement geometry shifts and rotations as described in GEAR steering file -->
  <!--parameter name="DoGear" type="bool" value="false"/-->
  <!--Rotation Angle around Z axis-->
  <!--parameter name="Gamma" type="double" value="0"/-->
  <!--Enable or disable histograms-->
  <parameter name="HistogramSwitch" type="bool" value="false"/>
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="OutputReferenceCollection" type="string" value="output_refhit"/-->
  <!--Events number to have DEBUG1 printed outs (default=10)-->
  <parameter name="PrintEvents" type="int" value="0"/>
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <parameter name="ReferenceCollection" type="string" value="refhit"/>
  <!--This is the name of the reference it collection (init at 0,0,0)-->
  <!--parameter name="ReferenceHitFile" type="string" value="reference.slcio"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--List of alignment collections that were applied to the DUT-->
  <parameter name="alignmentCollectionNames" type="StringVec">prealign</parameter>
  <!--List of hit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
  <parameter name="hitCollectionNames" type="StringVec" value="hitCollectionNames"/>
  <!--List of refhit collections. First one is INPUT collection, every subsequent corresponds to applying alignment collection-->
  <parameter name="refhitCollectionNames" type="StringVec" value="hitCollectionNames"/>
</processor>

<processor name="Correlator" type="EUTelCorrelator">
  <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit1 </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Minimum allowed cluster charge to be taken into account for the correlation plots (default = 2)-->
  <parameter name="ClusterChargeMinimum" type="int" value="2"/>
  <!--Dump the offset X and Y values calculated from the correlation bands (default = true)-->
  <parameter name="DumpOffset" type="bool" value="false"/>
  <!--How many events are needed to get reasonable correlation plots (and Offset DB)? (default=1000)-->
  <parameter name="Events" type="int" value="4999"/>
  <!--SensorID of fixed plane-->
  <!--parameter name="FixedPlane" type="int" value="0"/-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string" value="hotpixel"/-->
  <!--List of cluster collections-->
  <parameter name="InputClusterCollections" type="StringVec"> </parameter>
  <!--If there are more then this number of correlated hits (planes->track candidate) (default=5)-->
  <parameter name="MinNumberOfCorrelatedHits" type="int" value="5"/>
  <!--This is the name of the LCIO file name with the output offset db (add .slcio)-->
  <!--parameter name="OffsetDBFile" type="string" value="offset-db.slcio"/-->
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string" value="refhit"/>
  <!--Maximal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMax" type="FloatVec"> 5. 5. 5. 5. 5. 5. 5. </parameter>
  <!--Minimal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsXMin" type="FloatVec"> -5. -5. -5. -5. -5. -5. -5. </parameter>
  <!--Maximal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMax" type="FloatVec"> 5. 5. 5. 5. 5. 5. 5. </parameter>
  <!--Minimal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <parameter name="ResidualsYMin" type="FloatVec"> -5. -5. -5. -5. -5. -5. -5. </parameter>
  <!--Name of histogram info xml file-->
  <parameter name="HistogramInfoFilename" type="string" value="@HistoInfoFile@"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="LoadAlignment" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment @DatabasePath@/@FilePrefix@-alignment.slcio alignment </parameter>
  <!--parameter name="SimpleFileHandler" type="StringVec"> alignment1 @DatabasePath@/run23-28-alignment.slcio alignment </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelAPIXApplyAlignment" type="EUTelProcessorApplyAlignment">
  <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedPre </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">alignedHit1 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string">DEBUG0</parameter-->
</processor>

<processor name="LoadAlignment1" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment1 @DatabasePath@/@FilePrefix@-alignment1.slcio alignment1</parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value="SILENT"/-->
</processor>

<processor name="MyEUTelAPIXApplyAlignment1" type="EUTelProcessorApplyAlignment">
  <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment1 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit1 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">alignedHit2 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">DEBUG0</parameter>
  </processor>
  
  <processor name="LoadAlignment2" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment2 @DatabasePath@/@FilePrefix@-alignment2.slcio alignment2</parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelAPIXApplyAlignment2" type="EUTelProcessorApplyAlignment">
  <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment2 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit2 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">alignedHit3 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">DEBUG0</parameter>
</processor>

<processor name="LoadAlignment3" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
  <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> alignment3 @DatabasePath@/@FilePrefix@-alignment3.slcio alignment3</parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelAPIXApplyAlignment3" type="EUTelProcessorApplyAlignment">
  <!--Apply alignment constants to hit collection-->
  <!--Alignment constant from the condition file-->
  <parameter name="AlignmentConstantName" type="string" lcioInType="LCGenericObject"> alignment3 </parameter>
  <!--The name of the input hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit3 </parameter>
  <!--The name of the output hit collection-->
  <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit">alignedHit4 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string">DEBUG0</parameter>
</processor>

<processor name="Fitter" type="EUTelTestFitter">
  <!--Analytical track fitting processor for EUDET telescope-->
  <!--Name of the input TrackerHit collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerHit"> alignedHit1 </parameter>
  <!--This is the name of the input track candidate collection-->
  <parameter name="TrackCollectionName" type="string"> track_candidates </parameter>
  <!--Cluster (pulse) collection name-->
  <!--parameter name="PulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_m26 </parameter-->
  <!--pAlpide cluster (pulse) collection name-->
  <!--parameter name="pAlpidePulseCollectionName" type="string" lcioInType="TrackerPulse"> cluster_pALPIDE </parameter-->
  <!--Input of Zero Suppressed data-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> original_zsdata </parameter>
  <!--Collection name for corrected particle positions-->
  <parameter name="CorrectedHitCollectionName" type="StringAVec" lcioOutType="TrackerHit"> corrhits </parameter>
  <!--Collection name for fitted particle hits (positions)-->
  <parameter name="OutputHitCollectionName" type="StringVec" lcioOutType="TrackerHit"> fithits </parameter>
  <!--Collection name for fitted tracks-->
  <parameter name="OutputTrackCollectionName" type="StringVec" lcioOutType="Track"> track </parameter>
  <!--Ids of layers for which alignment corrections are given-->
  <!--parameter name="AlignLayerIDs" type="IntVec"> </parameter-->
  <!--Rotation around Z for layer alignment-->
  <!--parameter name="AlignLayerRotZ" type="FloatVec"> </parameter-->
  <!--Alignment corrections in X for these layers-->
  <!--parameter name="AlignLayerShiftX" type="FloatVec"> </parameter-->
  <!--Alignment corrections in Y for these layers-->
  <!--parameter name="AlignLayerShiftY" type="FloatVec"> </parameter-->
  <!--Allow same hit to be used in more than one track-->
  <parameter name="AllowAmbiguousHits" type="bool" value="false"/>
  <!--Allowed number of missing hits in the track-->
  <parameter name="AllowMissingHits" type="int" value="@AllowedMissingHits@"/>
  <!--Allowed number of hits removed from the track-->
  <parameter name="AllowSkipHits" type="int" value="@AllowedSkipHits@"/>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Beam direction tilt in X-Z plane [rad] (for beam constraint)-->
  <!--parameter name="BeamSlopeX" type="double" value="0"/-->
  <!--Beam direction tilt in Y-Z plane [rad] (for beam constraint)-->
  <!--parameter name="BeamSlopeY" type="double" value="0"/-->
  <!--Assumed angular spread of the beam [rad] (for beam constraint)-->
  <!--parameter name="BeamSpread" type="double" value="0"/-->
  <!--Maximum Chi2 for accepted track fit-->
  <parameter name="Chi2Max" type="double" value="@Chi2Max@"/>
  <!--Minimum Chi2 for accepted track fit-->
  <parameter name="Chi2Min" type="double" value="0"/>
  <!--Print out every DebugEventCount event-->
  <parameter name="DebugEventCount" type="int"> 100 100 </parameter>
  <!--Beam energy [GeV]-->
  <parameter name="Ebeam" type="double" value="@BeamEnergy@"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Flag for storing input (measured) hits in track-->
  <parameter name="InputHitsInTrack" type="bool" value="true"/>
  <!--Ids of layers for which position masks are applied-->
  <!--parameter name="MaskLayerIDs" type="IntVec"> </parameter-->
  <!--Upper mask edge in X-->
  <!--parameter name="MaskMaxX" type="FloatVec"> </parameter-->
  <!--Upper mask edge in Y-->
  <!--parameter name="MaskMaxY" type="FloatVec"> </parameter-->
  <!--Lower mask edge in X-->
  <!--parameter name="MaskMinX" type="FloatVec"> </parameter-->
  <!--Lower mask edge in Y-->
  <!--parameter name="MaskMinY" type="FloatVec"> </parameter-->
  <!--Maximum number of considered hits per plane-->
  <parameter name="MaxPlaneHits" type="int" value="10000"/>
  <!--Maximum number of hits to be shared by more than one track-->
  <!--parameter name="MaximumAmbiguousHits" type="int" value="2"/-->
  <!--Chi2 penalty for missing hit in the track-->
  <parameter name="MissingHitPenalty" type="double" value="@MissingHitPenalty@"/>
  <!--Flag for storing output (fitted) hits in track-->
  <parameter name="OutputHitsInTrack" type="bool" value="true"/>
  <!--Ids of layers which should be treated as passive in the fit-->
  <parameter name="PassiveLayerIDs" type="IntVec"> @dutID@ </parameter>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string" value="refhit"/>
  <!--X resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionX" type="FloatVec"> 10 10 10 10 10 10 </parameter-->
  <!--Y resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionY" type="FloatVec"> 10 10 10 10 10 10 </parameter-->
  <!--Z resolution parameter for each plane. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResolutionZ" type="FloatVec"> 10 10 10 10 10 10 </parameter-->
  <!--Flag for searching multiple tracks in events with multiple hits-->
  <parameter name="SearchMultipleTracks" type="bool" value="true"/>
  <!--Chi2 penalty for removing hit from the track-->
  <parameter name="SkipHitPenalty" type="double" value="@SkipHitPenalty@"/>
  <!--Ids of layers which should NOT be included in the fit-->
  <parameter name="SkipLayerIDs" type="IntVec" value="@SkipLayerIDs@"/>
  <!--Maximum hit distance from the expected position, used for hit preselection-->
  <parameter name="SlopeDistanceMax" type="float" value="@SlopeDistanceMax@"/>
  <!--Limit on track slope change when passing sensor layer (in X direction)-->
  <parameter name="SlopeXLimit" type="float" value="0.01"/>
  <!--Limit on track slope change when passing sensor layer (in Y direction)-->
  <parameter name="SlopeYLimit" type="float" value="0.01"/>
  <!--Flag for using beam direction constraint in the fit-->
  <parameter name="UseBeamConstraint" type="bool" value="false"/>
  <!--Flag for including DUT measurement in the fit-->
  <parameter name="UseDUT" type="bool" value="false"/>
  <!--Flag for using only hits which are associated to a track candidate-->
  <parameter name="FromTrack" type="bool" value="false"/>
  <!--Flag for writing clusters to file-->
  <parameter name="ClusterFill" type="bool" value="false"/>
  <!--Flag for using nominal resolution instead of position errors-->
  <parameter name="UseNominalResolution" type="bool" value="false"/>
  <!--Use expected track direction to constraint number of considered hit combinations (track preselection).-->
  <parameter name="UseSlope" type="bool" value="true"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value="SILENT"/-->
  <!--Ids of layers for which position window cut are applied-->
  <!--parameter name="WindowLayerIDs" type="IntVec"> </parameter-->
  <!--Upper window edge in X-->
  <!--parameter name="WindowMaxX" type="FloatVec"> </parameter-->
  <!--Upper window edge in Y-->
  <!--parameter name="WindowMaxY" type="FloatVec"> </parameter-->
  <!--Lower window edge in X-->
  <!--parameter name="WindowMinX" type="FloatVec"> </parameter-->
  <!--Lower window edge in Y-->
  <!--parameter name="WindowMinY" type="FloatVec"> </parameter-->
  <!--Minimum distance between sparsified pixel ( touching == sqrt(2)) -->
  <parameter name="SparseMinDistance" type="float" value="0"/>
  <!--List of alignment collections which are needed to get track position on a Sensor surface -->
  <parameter name="alignmentCollectionNames" type="StringVec"> prealign alignment </parameter>
</processor>

<processor name="DUTHisto0" type="EUTelDUTHistograms">
  <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Name of the input DUT hit collection-->
  <!--<parameter name="InputFitHitCollectionName" type="string" lcioInType="TrackerHit"> gearfithits </parameter>-->
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--Name of the input DUT hit collection-->
  <!--parameter name="InputRecHitCollectionName" type="string" lcioInType="TrackerHit"> alignedPre </parameter-->
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="StringVec" lcioInType="Track"> track </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double" value="0.028"/>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double" value="0.028"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int"> 0 100 100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="1.0"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int" value="@dutID@"/>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string"> refhit </parameter>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="True"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--cluster size X cut -->
  <!--parameter name="cluSizeXCut" type="int" value="-1"/-->
  <!--cluster size Y cut -->
  <!--parameter name="cluSizeYCut" type="int" value="-1"/-->
  <!--number of hit on a track with _cluSizeX cluster size -->
  <!--parameter name="trackNCluXCut" type="int" value="0"/-->
  <!--number of hit on a track with _cluSizeY cluster size -->
  <!--parameter name="trackNCluYCut" type="int" value="0"/-->
</processor>


<processor name="DUTHisto1" type="EUTelDUTHistograms">
  <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Name of the input DUT hit collection-->
  <!--<parameter name="InputFitHitCollectionName" type="string" lcioInType="TrackerHit"> gearfithits </parameter>-->
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedPre </parameter>
  <!--Name of the input DUT hit collection-->
  <!--parameter name="InputRecHitCollectionName" type="string" lcioInType="TrackerHit"> alignedPre </parameter-->
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="StringVec" lcioInType="Track"> track </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double" value="0.028"/>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double" value="0.028"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int"> 0 100 100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="1.0"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int" value="@dutID@"/>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string"> refhit </parameter>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="True"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--cluster size X cut -->
  <!--parameter name="cluSizeXCut" type="int" value="-1"/-->
  <!--cluster size Y cut -->
  <!--parameter name="cluSizeYCut" type="int" value="-1"/-->
  <!--number of hit on a track with _cluSizeX cluster size -->
  <!--parameter name="trackNCluXCut" type="int" value="0"/-->
  <!--number of hit on a track with _cluSizeY cluster size -->
  <!--parameter name="trackNCluYCut" type="int" value="0"/-->
</processor>

<processor name="DUTHisto2" type="EUTelDUTHistograms">
  <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Name of the input DUT hit collection-->
  <!--<parameter name="InputFitHitCollectionName" type="string" lcioInType="TrackerHit"> gearfithits </parameter>-->
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit1 </parameter>
  <!--Name of the input DUT hit collection-->
  <!--parameter name="InputRecHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter-->
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="StringVec" lcioInType="Track"> track </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double" value="0.028"/>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double" value="0.028"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int"> 0 100 100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="1.0"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int" value="@dutID@"/>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string"> refhit </parameter>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="True"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--cluster size X cut -->
  <!--parameter name="cluSizeXCut" type="int" value="-1"/-->
  <!--cluster size Y cut -->
  <!--parameter name="cluSizeYCut" type="int" value="-1"/-->
  <!--number of hit on a track with _cluSizeX cluster size -->
  <!--parameter name="trackNCluXCut" type="int" value="0"/-->
  <!--number of hit on a track with _cluSizeY cluster size -->
  <!--parameter name="trackNCluYCut" type="int" value="0"/-->
</processor>

 <processor name="DUTHisto3" type="EUTelDUTHistograms">
  <!--Analysis of DUT performance based on the analytic track fit results-->
  <!--Name of the input DUT hit collection-->
  <!--<parameter name="InputFitHitCollectionName" type="string" lcioInType="TrackerHit"> gearfithits </parameter>-->
  <!--Name of the input DUT hit collection-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit2 </parameter>
  <!--Name of the input DUT hit collection-->
  <!--parameter name="InputRecHitCollectionName" type="string" lcioInType="TrackerHit"> alignedHit </parameter-->
  <!--Name of the input Track collection-->
  <parameter name="InputTrackCollectionName" type="StringVec" lcioInType="Track"> track </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
  <!--Alignment corrections for DUT: shift (in mm) in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
  <!--DUT sensor pitch in X-->
  <parameter name="DUTpitchX" type="double" value="0.028"/>
  <!--DUT sensor pitch in Y-->
  <parameter name="DUTpitchY" type="double" value="0.028"/>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int"> 0 100 100 </parameter>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="1.0"/>
  <!--Name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int" value="@dutID@"/>
  <!--reference hit collection name -->
  <parameter name="ReferenceCollection" type="string"> refhit </parameter>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="True"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--cluster size X cut -->
  <!--parameter name="cluSizeXCut" type="int" value="-1"/-->
  <!--cluster size Y cut -->
  <!--parameter name="cluSizeYCut" type="int" value="-1"/-->
  <!--number of hit on a track with _cluSizeX cluster size -->
  <!--parameter name="trackNCluXCut" type="int" value="0"/-->
  <!--number of hit on a track with _cluSizeY cluster size -->
  <!--parameter name="trackNCluYCut" type="int" value="0"/-->
</processor>


<processor name="EUTelFitTuple" type="EUTelFitTuple">
  <!--Prepare n-tuple with track fit results-->
  <!--Name of the input Track collection-->
  <parameter name="InputCollectionName" type="string" lcioInType="Track"> track </parameter>
  <!--Name of the input DUT hit collection-->
  <parameter name="InputDUTCollectionName" type="string" lcioInType="TrackerHit"> alignedHit1 </parameter>
  <!--Alignment corrections for DUT: shift in X, Y and rotation around Z-->
  <parameter name="DUTalignment" type="FloatVec"> 0 0 0 </parameter>
  <!--Print out every DebugEnevtCount event-->
  <parameter name="DebugEventCount" type="int" value="100"/>
  <!--Maximum allowed distance between fit and matched DUT hit-->
  <parameter name="DistMax" type="double" value="100"/>
  <!--Value used for missing measurements-->
  <parameter name="MissingValue" type="double" value="-100"/>
  <!--Flag for manual DUT selection-->
  <parameter name="UseManualDUT" type="bool" value="true"/>
  <!--Id of telescope layer which should be used as DUT-->
  <parameter name="ManualDUTid" type="int" value="@dutID@"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 
<processor name="Save" type="EUTelOutputProcessor">
  <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> cluster_m26 cluster_pALPIDE cluster_pALPIDEfs hit_eta3x3 alignedHit_eta3x3 corrhits alignedPre alignedHit1 </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec"> track fithits </parameter-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@FilePrefix@-track_DUT@dutID@.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">               
  <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
  <!--Print event number for every n-th event-->                                                    
  <parameter name="EveryNEvents" type="int" value="10000"/>                                          
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->       
  <!--parameter name="Verbosity" type="string" value=""/-->                                         
  <!--print the event timestamp as read from LCIO-->                                                
  <!--parameter name="printTimestamp" type="bool" value="false"/-->                                 
</processor>                                                                                        

</marlin>
