<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Mon Jun 24 17:02:36 2013

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <!--processor name="TimingChecker"/-->
      <!--if condition="TimingChecker"-->
        <processor name="pALPIDEfsEUTelAutoPedestalNoiseProcessor"/>
        <processor name="LoadHotPixelDBPALIPDEfs"/>
        <processor name="Clustering_pALPIDEfs"/>
        <processor name="Correlator"/>
        <processor name="Save"/>
      <!--/if-->
      <processor name="MyEUTelUtilityPrintEventNumber"/>
   </execute>

   <global>
      <!--parameter name="LCIOInputFiles"> @LcioPath@/run@RunNumber@-converter.slcio </parameter-->
      <parameter name="LCIOInputFiles"> @LCIOInputFiles@ </parameter>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@FilePrefix@-clustering"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <!--processor name="TimingChecker" type="PalpideEventSelector"-->
  <!--parameter name="TRGTIME_min" type="int">700</parameter-->
  <!--parameter name="TRGTIME_max" type="int">1330</parameter-->
  <!--Switch on or off the histogram filling-->
  <!--parameter name="HistogramFilling" type="bool" value="true"/-->
  <!--This is the name of the histogram information file-->
  <!--parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/-->
 <!--/processor-->

 <processor name="pALPIDEfsEUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
 <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> pALPIDEfs_noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> pALPIDEfs_pedestal </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> pALPIDEfs_status </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> 1 1 1 1 1 1 1 </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> 0 0 0 0 0 0 0 </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> 1023 1023 1023 1023 1023 1023 1023 </parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> 511 511 511 511 511 511 511 </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> 0 0 0 0 0 0 0 </parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> 0 0 0 0 0 0 0 </parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> 0 1 2 3 4 5 6 </parameter>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="LoadHotPixelDBPALIPDEfs" type="ConditionsProcessor">
  <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization of a conditions database handler-->
  <!--parameter name="DBCondHandler" type="StringVec"> conditionsName /lccd/myfolder HEAD </parameter-->
  <!--Initialization of a conditions db file handler-->
  <!--parameter name="DBFileHandler" type="StringVec"> conditionsName conditions.slcio collectionName </parameter-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:calvin:hobbes"/>
    <!--Initialization of a data file handler-->
  <!--parameter name="DataFileHandler" type="StringVec" value="conditionsName"/-->
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> hotpixel_pALPIDEfs @DatabasePath@/run@RunNumber@-hotpixelPALPIDEfs.slcio hotpixel_pALPIDEfs </parameter>
    <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="Clustering_pALPIDEfs" type="EUTelClusteringProcessor">
 <!--EUTelClusteringProcessor is looking for clusters into a calibrated pixel matrix.-->
  <!--Input calibrated data not zero suppressed collection name-->
  <!--parameter name="NZSDataCollectionName" type="string" lcioInType="TrackerData"> data </parameter-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> zsdata_pALPIDEfs </parameter>
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> pALPIDEfs_noise </parameter>
  <!--Pixel status (input) collection name-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> pALPIDEfs_status </parameter>
  <!--Input of Zero Suppressed data-->
  <!--Cluster (output) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioOutType="TrackerPulse"> cluster_pALPIDEfs </parameter>
  <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
  <parameter name="ClusterN" type="IntVec"> 4 6 8 9 </parameter>
  <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
  <parameter name="ClusterNxN" type="IntVec" value="3"/>
  <!--Select here which algorithm should be used for clustering.
Available algorithms are:
-> FixedFrame: for custer with a given size
-> BrickedCluster: for bricked clustering on raw data-->
  <parameter name="ClusteringAlgo" type="string" value="FixedFrame"/>
  <!--Select herewith the type of the data format you are expecting from the sensors.
Available types of the data format:
-> Analog: smooth distribution of pixel ADC values from Min to Max
-> Digital: descrete distribution of pixel ADC values from Min to Max
-> Binary: only two values of the signal - 0 and 1
-->
  <parameter name="DataFormatType" type="string" value="Binary"/>
  <!--The list of sensor ids that have to be excluded from the clustering.-->
  <parameter name="ExcludedPlanes" type="IntVec"> @ExcludedPlanes@ </parameter>
  <!--Threshold in SNR for cluster identification-->
  <parameter name="FFClusterCut" type="float" value="0.0"/>
  <!--Maximum allowed cluster size along x (only odd numbers)-->
  <parameter name="FFClusterSizeX" type="int" value="5"/>
  <!--Maximum allowed cluster size along y (only odd numbers)-->
  <parameter name="FFClusterSizeY" type="int" value="5"/>
  <!--Threshold in SNR for seed pixel identification-->
  <parameter name="FFSeedCut" type="float" value="0.0"/>
  <!--This is the name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfoFile@"/>
  <!--Switch on or off the histogram filling-->
  <parameter name="HistogramFilling" type="bool" value="true"/>
  <!--This is the name of the hotpixel collection-->
  <parameter name="HotPixelCollectionName" type="string" value="hotpixel_pALPIDEfs"/>
  <!--Threshold in SNR for clusters contained in ZS data-->
  <parameter name="SparseClusterCut" type="float" value="0.0"/>
  <!--Minimum distance between sparsified pixel ( touching == sqrt(2)) -->
  <parameter name="SparseMinDistance" type="float" value="1"/>
  <!--Threshold in SNR for seed pixel contained in ZS data-->
  <parameter name="SparseSeedCut" type="float" value="0.0"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--Select here which algorithm should be used for clustering.
Available algorithms are:
-> SparseCluster: for cluster in ZS frame
-> SparseCluster2: for cluster in ZS frame with better performance
-> FixedFrame: for cluster with a given size
-> DFixedFrame: for digital cluster with a given size
-> BrickedCluster: for bricked clustering on zs data
-->
  <parameter name="ZSClusteringAlgo" type="string" value="SparseCluster"/>
</processor>


 <processor name="Correlator" type="EUTelCorrelator">
 <!--EUTelCorrelator fills histograms with correlation plots-->
  <!--List of cluster collections-->
  <parameter name="InputClusterCollections" type="string" lcioInType="TrackerPulse"> cluster_pALPIDEfs </parameter>
  <!--Hit collection name-->
  <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hit </parameter>
  <!--Do you want the reference hit collection to be corrected by the shifts and tilts from the alignment collection? (default - false )-->
  <!--parameter name="ApplyToReferenceCollection" type="bool" value="false"/-->
  <!--Minimum allowed cluster charge to be taken into account for the correlation plots (default = 2)-->
  <parameter name="ClusterChargeMinimum" type="int" value="2"/>
  <!--Dump the offset X and Y values calculated from the correlation bands (default = true)-->
  <parameter name="DumpOffset" type="bool" value="true"/>
  <!--How many events are needed to get reasonable correlation plots (and Offset DB)? (default=1000)-->
  <parameter name="Events" type="int" value="50000"/>
  <!--SensorID of fixed plane-->
  <!--parameter name="FixedPlane" type="int" value="0"/-->
  <!--This is the name of the hot pixel collection to be saved into the output slcio file-->
  <!--parameter name="HotPixelCollectionName" type="string" value="hotpixel"/-->
  <!--If there are more then this number of correlated hits (planes->track candidate) (default=5)-->
  <!--parameter name="MinNumberOfCorrelatedHits" type="int" value="5"/-->
  <!--This is the name of the LCIO file name with the output offset db (add .slcio)-->
  <parameter name="OffsetDBFile" type="string" value="@DatabasePath@/run@RunNumber@-offset.slcio"/>
  <!--reference hit collection name -->
  <!--parameter name="ReferenceCollection" type="string" value="reference"/-->
  <!--Maximal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMax" type="FloatVec"> 10 10 10 10 10 10 </parameter-->
  <!--Minimal values of the hit residuals in the X direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsXMin" type="FloatVec"> -10 -10 -10 -10 -10 -10 </parameter-->
  <!--Maximal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMax" type="FloatVec"> 10 10 10 10 10 10 </parameter-->
  <!--Minimal values of the hit residuals in the Y direction for a correlation band. Note: these numbers are ordered according to the z position of the sensors and NOT according to the sensor id.-->
  <!--parameter name="ResidualsYMin" type="FloatVec"> -10 -10 -10 -10 -10 -10 </parameter-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <parameter name="Verbosity" type="string" value="SILENT"/>
</processor>

 <processor name="Save" type="EUTelOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Eventually it adds a EORE at the of the file if it was missing Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> rawdata status noise pedestal data zsdata zsdata_pALPIDEfs </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/run@RunNumber@-clustering.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--Set it to true to remove intermediate EORE in merged runs-->
  <parameter name="SkipIntermediateEORE" type="bool" value="true"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelUtilityPrintEventNumber" type="EUTelUtilityPrintEventNumber">
  <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level--> 
  <!--Print event number for every n-th event--> 
  <parameter name="EveryNEvents" type="int" value="10000"/> 
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")--> 
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--print the event timestamp as read from LCIO-->
  <!--parameter name="printTimestamp" type="bool" value="false"/-->
</processor>
</marlin>
