<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
 ============================================================================================================================
 Steering File generated by Marlin GUI on Thu Apr 10 11:42:04 2014
 
 WARNING: - Please be aware that comments made in the original steering file were lost.
 - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
 - Extra parameters that aren't categorized as default in a processor lost their description and type.
 ============================================================================================================================
 -->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
    
    <execute>
        <processor name="MyAIDAProcessor"/>
        <processor name="MyAlibavaSeedClustering"/>
        <processor name="MyAlibavaClusterHistogramMaker"/>
        <processor name="MyAlibavaClusterConverter"/>
        <processor name="Save"/>
        <processor name="PrintEventNumber"/>
    </execute>
    
    <global>
        <parameter name="LCIOInputFiles"> @LcioPath@/@AlibavaOutputFormat@-reco.slcio </parameter>
        <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
        <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
        <parameter name="SkipNEvents" value="@SkipNEvents@"/>
        <parameter name="SupressCheck" value="false"/>
        <parameter name="Verbosity" value="@Verbosity@"/>
        <!--To set of channels to be used, ex.The format should be like $ChipNumber:StartChannel-EndChannel$ ex. $0:5-20$ $0:30-100$ $1:50-70$ means from chip 0 channels between 5-20 and 30-100, from chip 1 channels between 50-70 will be used (all numbers included). the rest will be masked and not used Note that the numbers should be in ascending order and there should be no space between two $ character-->
        <parameter name="ChannelsToBeUsed"> @Bonds@ </parameter>
        <!--To choose if processor should skip masked events. Set the value to 0 for false, to 1 for true -->
        <parameter name="SkipMaskedEvents"> @SkipMaskedEvents@ </parameter>
        
    </global>
    
    <processor name="MyAIDAProcessor" type="AIDAProcessor">
        <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
        <!-- compression of output file 0: false >0: true (default) -->
        <parameter name="Compress" type="int" value="1"/>
        <!-- filename without extension-->
        <parameter name="FileName" type="string" value="@HistogramPath@/@AlibavaOutputFormat@-seedclustering-histo"/>
        <!-- type of output file root (default) or xml )-->
        <parameter name="FileType" type="string" value="root"/>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string" value=""/-->
    </processor>
    
    
    <processor name="MyAlibavaSeedClustering" type="AlibavaSeedClustering">
        <!--AlibavaSeedClustering finds clusters using seed and neighbour cuts -->
        <!--Input collection name, it should be pedestal subtracted-->
        <parameter name="InputCollectionName" type="string" lcioInType="TrackerData">recodata_xtalk </parameter>
        <!--Output data collection name-->
        <parameter name="OutputCollectionName" type="string" lcioOutType="TrackerData">alibava_clusters </parameter>
        <!--The signal/noise ratio that neigbour channels have to pass to be added to the cluster-->
        <parameter name="NeighbourSNRCut" type="float"> @NeighbourSNRCut@ </parameter>
        <!--Noise collection name, better not to change-->
        <parameter name="NoiseCollectionName" type="string">noise_cmmd </parameter>
        <!--The filename where the pedestal and noise values stored-->
        <parameter name="NoiseInputFile" type="string"> @DatabasePath@/ped@PedestalRunNumber@.slcio </parameter>
        <!--The signal/noise ratio that channels have to pass to be considered as seed channel-->
        <parameter name="SeedSNRCut" type="float"> @SeedSNRCut@ </parameter>
        <!--Set this parameter to true for negative signals, any other value will be disregarded and the signal will be assumed to be positive -->
        <parameter name="IsNegativeSignal" type="bool"> @IsNegativeSignal@ </parameter>
        <!--The default sensitive axis of the strip sensor(s) according to telescope is X. If sensitive axis is Y then set this parameter to zero (0). Any other value will be disregarded and sensitive axis will assumed to be "X" -->
        <parameter name="IsSensitiveAxisX" type="int"> @IsSensitiveAxisX@ </parameter>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
    </processor>
    
    
    <processor name="MyAlibavaClusterHistogramMaker" type="AlibavaClusterHistogramMaker">
        <!--AlibavaClusterHistogramMaker takes some type of Alibava data and produces histograms -->
        <!--Input raw data collection name-->
        <parameter name="InputCollectionName" type="string" lcioInType="TrackerData">alibava_clusters </parameter>
        <!--The path of XML file where the histograms are defined-->
        <parameter name="HistoXMLFile" type="string"> @AlibavaHistoInfo@ </parameter>
        <!--The top tag in HistoXMLFile-->
        <parameter name="TopTagInXMLFile" type="string">AlibavaHistoList </parameter>
        <!--The tag in TopTagInXMLFile. This processor will only consider the histogram definitions inside this tag. This tag should be inside <TopTagInXMLFile> ... <TopTagInXMLFile/>-->
        <parameter name="TagToProcess" type="string">myAlibavaClusterHistogramMaker </parameter>
        <!--The filename where the pedestal and noise values stored-->
        <parameter name="NoiseInputFile" type="string">@DatabasePath@/ped@PedestalRunNumber@.slcio </parameter>
        <!--Noise collection name, better not to change-->
        <parameter name="NoiseCollectionName" type="string"> noise_cmmd </parameter>
        <!--The filename where the calibration values stored-->
        <!--parameter name="CalibrationInputFile" type="string">notset </parameter-->
        <!--Charge calibration collection name, better not to change-->
        <!--parameter name="ChargeCalibrationCollectionName" type="string">notset </parameter-->
        <!--Choose if pedestal and noise should be plotted. If you want to plot only noise or pedestal set this variable true and only set the noise or pedeatal collection name you want to be plotted.-->
        <parameter name="EventsToPlot" type="IntVec"> @EventsToPlot@</parameter>
        <!--In case this variable is set, all signals will be multipled by this value.-->
        <parameter name="MultiplySignalBy" type="float"> @MultiplySignalBy@ </parameter>
        <!--Choose if noise should be plotted. If you want to plot only noise set this variable true and set the noise collection name.-->
        <parameter name="PlotNoise" type="bool"> @PlotNoise@ </parameter>
        <!--In case this variable is set (say x), x percent of total events will be plotted randomly. The number should be between 0-100-->
        <parameter name="PlotSomePercentOfEvents" type="float"> @PlotSomePercentOfEvents@ </parameter>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
    </processor>
    
    
    <processor name="MyAlibavaClusterConverter" type="AlibavaClusterConverter">
        <!--AlibavaClusterConverter converts AlibavaClusters to EUTelSparseCluster and  :) -->
        <!--Input alibava cluster collection name-->
        <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> alibava_clusters </parameter>
        <!--The value that should be stored in missing coordinate. This number has to be integer since it will be used as channel number of the missing coordinate-->
        <parameter name="MissingCoordinateValue" type="int">0 </parameter>
        <!--The collection name of cluster pulse.  This might be hardcoded in EUTelescope framework-->
        <parameter name="OutputEUTelClusterPulseCollectionName" type="string">clustercollection </parameter>
        <!--The collection name of sparse cluster.  This might be hardcoded in EUTelescope framework-->
        <parameter name="OutputEUTelSparseClusterCollectionName" type="string">original_zsdata </parameter>
        <!--The sensor ID for the data. The actual sensorID will be stored as SensorIDStartsFrom + ChipNumber -->
        <parameter name="SensorIDStartsFrom" type="int">6 </parameter>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string">DEBUG </parameter-->
    </processor>
    
    
    
    <processor name="Save" type="LCIOOutputProcessor">
        <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
        <!--drops the named collections from the event-->
        <parameter name="DropCollectionNames" type="StringVec"> recodata_notcmmd commonmodeerror commonmode </parameter>
        <!--drops all collections of the given type from the event-->
        <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
        <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
        <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
        <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
        <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
        <!-- name of output file -->
        <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/@AlibavaOutputFormat@-seedclustering.slcio"/>
        <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
        <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
        <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
        <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string" value=""/-->
    </processor>
    
    <processor name="PrintEventNumber" type="EUTelUtilityPrintEventNumber">
        <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
        <!--Print event number for every n-th event-->
        <parameter name="EveryNEvents" type="int" value="2500"/>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string" value=""/-->
        <!--print the event timestamp as read from LCIO-->
        <!--parameter name="printTimestamp" type="bool" value="false"/-->
    </processor>
    
    
</marlin>
