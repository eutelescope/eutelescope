<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Fri Jun 16 09:38:51 2017

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="MyAlibavaTimeCutProcessor"/>
      <processor name="MyAlibavaClustering"/>
      <processor name="Save"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @AlibavaLcioRawFolder@/run@RunNumber@.slcio </parameter>
      <parameter name="ChannelsToBeUsed" value="@Bonds@"/>
      <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
      <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
      <parameter name="SkipMaskedEvents" value="0"/>
      <parameter name="SkipNEvents" value="@SkipNEvents@"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="@Verbosity@"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistogramPath@/@Output@-alibava-clustering-1"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyAlibavaTimeCutProcessor" type="AlibavaTimeCutProcessor">
 <!--AlibavaTimeCutProcessor masks the events if their TDC time value is not in the range specified by TimeCutMin and TimeCutMax -->
  <!--The maximum tdc time that is acceptable to use that Event-->
  <parameter name="TimeCutMax" type="float" value="45.0"/>
  <!--The minimum tdc time that is acceptable to use that Event-->
  <parameter name="TimeCutMin" type="float" value="25.0"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

 <processor name="MyAlibavaClustering" type="AlibavaClustering">
 <!--AlibavaClustering does lots of things. It clusters non-zero supressed strip sensor data, can perform FIR filtering beforehand and gets the missing coordinate for the strip sensor from a telescope cluster file.-->
  <!--Input data collection name-->
  <parameter name="InputCollectionName" type="string" lcioInType="TrackerData"> recodata_cmmd </parameter>
  <!--The cluster collection name-->
  <parameter name="ClusterCollectionName" type="string" value="alibava_clusters"/>
  <!--The cluster SNR cut-->
  <parameter name="ClusterCut" type="float" value="2.5"/>
  <!--The filename to read/write coefficients to-->
  <parameter name="FIRCoefficientFile" type="string" value="@LcioPath@/@RunNumber@-coefficients.txt"/>
  <!--If filtering is used, it is saved into this collection-->
  <parameter name="FIRCollectionName" type="string" value="filteredcollection1"/>
  <!--If we want to get the missing coordinate from the telescope this should be set to the telescope plane id (usually 0-5). Set to -1 to disable this feature-->
  <parameter name="GetMissingCoordFromTelescope" type="int" value="2"/>
  <!--The maximum accepted clustersize in the sensitive Alibava direction. This should be larger or equal to MinClustersize!-->
  <parameter name="MaxClustersize" type="int" value="6"/>
  <!--The maximum number of events read from the telescope. This number should be below the actual number of events in the telescope. The Alibava event count can be higher.-->
  <parameter name="MaxCount" type="int" value="@MaxRecordNumber@"/>
  <!--The minimum accepted clustersize in the sensitive Alibava direction. This must be larger or equal to 1!-->
  <parameter name="MinClustersize" type="int" value="1"/>
  <!--The noise collection name-->
  <parameter name="NoiseCollectionName" type="string" value="noise_cmmd"/>
  <!--The filename where the final noise is stored-->
  <parameter name="NoiseInputFile" type="string" value="@AlibavaLcioRawFolder@/ped@PedRunNumberFormatted@-cmmd.slcio"/>
  <!--The sensor polarity: -1 for negative cluster signals (p-type sensor), 1 for positive cluster signals (n-type sensor)-->
  <parameter name="Polarity" type="int" value="@Polarity@"/>
  <!--FIR filter coefficients from a previous iteration can be read if this is switched on.-->
  <parameter name="ReadFIRCoefficients" type="bool" value="false"/>
  <!--Take the missing coordinate from a mean of all telescope seeds (false)? Or search for the nearest one based on the relative position (true).-->
  <parameter name="SearchNearest" type="bool" value="true"/>
  <!--The seed SNR cut-->
  <parameter name="SeedCut" type="float" value="5.0"/>
  <!--The sparse cluster collection name, this needs to be original_zsdata for hitmaker-->
  <parameter name="SparseClusterCollectionName" type="string" value="alibava_nzsdata"/>
  <!--Telescope cluster collection name we want to get the unsensitive axis positions from-->
  <parameter name="TelescopeCollectionName" type="string" value="filtered_cluster_m26"/>
  <!--The filename where the telescope data is stored-->
  <parameter name="TelescopeFile" type="string" value="@LcioPath@/run@TelescopeRun@-filtered.slcio"/>
  <!--The unsensitive axis of our strip sensor-->
  <parameter name="UnsensitiveAxis" type="string" value="@UnsensAxis@"/>
  <!--A FIR (finite impulse response) filter can be applied to the input data to minimise crosstalk. This switches the filter on.-->
  <parameter name="UseFIRFilter" type="bool" value="true"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
  <!--From the eta distribution coefficients for filtering are calculated. This writes them to disk.-->
  <parameter name="WriteFIRCoefficients" type="bool" value="true"/>
  <!--For compatibility, two zero coefficients can be written to file.-->
  <parameter name="WriteZeroCoefficients" type="bool" value="@SetFilter2@"/>
</processor>

 <processor name="Save" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <parameter name="DropCollectionNames" type="StringVec"> recodata_notcmmd rawdata commonmodeerror commonmode </parameter>
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@LcioPath@/run@RunNumber@-alibava-clustering.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>
