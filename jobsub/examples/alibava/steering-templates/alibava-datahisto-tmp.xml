<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
 ============================================================================================================================
 Steering File generated by Marlin GUI on Thu Apr 10 11:42:04 2014
 
 WARNING: - Please be aware that comments made in the original steering file were lost.
 - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
 - Extra parameters that aren't categorized as default in a processor lost their description and type.
 ============================================================================================================================
 -->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">
    
    <execute>
        <processor name="MyAIDAProcessor"/>
        <processor name="MyAlibavaDataHistogramMaker"/>
        <processor name="PrintEventNumber"/>
    </execute>
    
    <global>
        <parameter name="LCIOInputFiles"> @LcioPath@/@AlibavaOutputFormat@-reco.slcio </parameter>
        <parameter name="GearXMLFile" value="@GearFilePath@/@GearFile@"/>
        <parameter name="MaxRecordNumber" value="@MaxRecordNumber@"/>
        <parameter name="SkipNEvents" value="0"/>
        <parameter name="SupressCheck" value="false"/>
        <parameter name="Verbosity" value="@Verbosity@"/>
        <!--To set of channels to be used, ex.The format should be like $ChipNumber:StartChannel-EndChannel$ ex. $0:5-20$ $0:30-100$ $1:50-70$ means from chip 0 channels between 5-20 and 30-100, from chip 1 channels between 50-70 will be used (all numbers included). the rest will be masked and not used Note that the numbers should be in ascending order and there should be no space between two $ character-->
        <parameter name="ChannelsToBeUsed"> @Bonds@ </parameter>
        <!--To choose if processor should skip masked events. Set the value to 0 for false, to 1 for true -->
        <parameter name="SkipMaskedEvents"> @SkipMaskedEvents@ </parameter>
        
    </global>
    
    <processor name="MyAIDAProcessor" type="AIDAProcessor">
        <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
        <!-- compression of output file 0: false >0: true (default) -->
        <parameter name="Compress" type="int" value="1"/>
        <!-- filename without extension-->
        <parameter name="FileName" type="string" value="@HistogramPath@/@AlibavaOutputFormat@-datahisto"/>
        <!-- type of output file root (default) or xml )-->
        <parameter name="FileType" type="string" value="root"/>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string" value=""/-->
    </processor>
    
    
    <processor name="MyAlibavaDataHistogramMaker" type="AlibavaDataHistogramMaker">
        <!--AlibavaDataHistogramMaker takes TrackerData of Alibava data and produces histograms -->
        <!--The filename where the calibration values stored-->
        <!--parameter name="CalibrationInputFile" type="string">notset </parameter-->
        <!--Charge calibration collection name, better not to change-->
        <!--parameter name="ChargeCalibrationCollectionName" type="string">notset </parameter-->
        <!--Input raw data collection name-->
        <parameter name="InputCollectionName" type="string" lcioInType="TrackerData">recodata_cmmd </parameter>
        <!--The path of XML file where the histograms are defined-->
        <parameter name="HistoXMLFile" type="string"> @AlibavaHistoInfo@ </parameter>
        <!--The top tag in HistoXMLFile-->
        <parameter name="TopTagInXMLFile" type="string"> AlibavaHistoList </parameter>
        <!--The tag in TopTagInXMLFile. This processor will only consider the histogram definitions inside this tag. This tag should be inside <TopTagInXMLFile> ... <TopTagInXMLFile/>-->
        <parameter name="TagToProcess" type="string"> myAlibavaDataHistogramMaker </parameter>
        <!--Noise collection name, better not to change-->
        <parameter name="NoiseCollectionName" type="string"> noise_cmmd </parameter>
        <!--Pedestal collection name, better not to change-->
        <parameter name="PedestalCollectionName" type="string"> pedestal_cmmd </parameter>
        <!--The filename where the pedestal and noise values stored-->
        <parameter name="PedestalInputFile" type="string"> @DatabasePath@/ped@PedestalRunNumber@.slcio </parameter>
        <!--Choose if pedestal and noise should be plotted-->
        <parameter name="PlotPedestalAndNoise" type="bool"> @PlotPedestalAndNoise@ </parameter>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <parameter name="Verbosity" type="string"> @Verbosity@ </parameter>
        <!--Choose if pedestal and noise should be plotted. If you want to plot only noise or pedestal set this variable true and only set the noise or pedeatal collection name you want to be plotted.-->
        <parameter name="EventsToPlot" type="IntVec"> @EventsToPlot@ </parameter>
        <!--In case this variable is set, all signals will be multipled by this value.-->
        <parameter name="MultiplySignalBy" type="float"> @MultiplySignalBy@ </parameter>
        <!--In case this variable is set (say x), x percent of total events will be plotted randomly. The number should be between 0-100-->
        <parameter name="PlotSomePercentOfEvents" type="float"> @PlotSomePercentOfEvents@ </parameter>
        
    </processor>
    
    <processor name="PrintEventNumber" type="EUTelUtilityPrintEventNumber">
        <!--EUTelUtilityPrintEventNumber prints event number to screen depending on the verbosity level-->
        <!--Print event number for every n-th event-->
        <parameter name="EveryNEvents" type="int" value="2500"/>
        <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
        <!--parameter name="Verbosity" type="string" value=""/-->
        <!--print the event timestamp as read from LCIO-->
        <!--parameter name="printTimestamp" type="bool" value="false"/-->
    </processor>
    
    
</marlin>
